# Generated by Django 5.2.5 on 2025-08-17 15:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='ESP32Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(help_text='Unique identifier for ESP32 device', max_length=50, unique=True)),
                ('device_name', models.CharField(help_text="Human-readable name (e.g., 'CS101_Classroom_ESP32')", max_length=100)),
                ('ssid', models.CharField(help_text='WiFi network name created by ESP32', max_length=32)),
                ('password', models.CharField(help_text='WiFi password (if required)', max_length=64)),
                ('location', models.CharField(help_text="Physical location (e.g., 'Computer Science Lab 1')", max_length=200)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this device is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True, help_text='Last time device was online')),
                ('last_heartbeat', models.DateTimeField(blank=True, help_text='Last heartbeat received from ESP32', null=True)),
            ],
            options={
                'verbose_name': 'ESP32 Device',
                'verbose_name_plural': 'ESP32 Devices',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('matric_no', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Matriculation Number')),
                ('name', models.CharField(max_length=100, verbose_name='Full Name')),
                ('department', models.CharField(blank=True, max_length=100, null=True, verbose_name='Department')),
                ('level', models.CharField(blank=True, max_length=10, null=True, verbose_name='Level')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.CharField(max_length=9)),
                ('semester', models.CharField(max_length=20)),
                ('date', models.DateField()),
                ('lecturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_ui.course')),
            ],
        ),
        migrations.CreateModel(
            name='AssignedCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.CharField(max_length=9)),
                ('semester', models.CharField(max_length=20)),
                ('lecturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_ui.course')),
            ],
            options={
                'verbose_name': 'Assigned Course',
                'verbose_name_plural': 'Assigned Courses',
                'ordering': ['session', 'semester', 'course__code'],
            },
        ),
        migrations.CreateModel(
            name='NetworkSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.CharField(max_length=9)),
                ('semester', models.CharField(max_length=20)),
                ('date', models.DateField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this network session is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_ui.course')),
                ('esp32_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_ui.esp32device')),
                ('lecturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Network Session',
                'verbose_name_plural': 'Network Sessions',
            },
        ),
        migrations.CreateModel(
            name='FingerprintStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fingerprint_data', models.CharField(choices=[('not_enrolled', 'Not Enrolled'), ('enrolled', 'Enrolled'), ('error', 'Error')], default='not_enrolled', max_length=20, verbose_name='Fingerprint Status')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admin_ui.student')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent')], max_length=10)),
                ('marked_at', models.DateTimeField(auto_now_add=True)),
                ('network_verified', models.BooleanField(default=False, help_text='Whether student was connected to ESP32 network')),
                ('device_mac', models.CharField(blank=True, help_text='Student device MAC address', max_length=17, null=True)),
                ('attendance_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_ui.attendancesession')),
                ('esp32_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_ui.esp32device')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_ui.student')),
            ],
        ),
        migrations.CreateModel(
            name='ConnectedDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac_address', models.CharField(help_text='Device MAC address', max_length=17)),
                ('device_name', models.CharField(blank=True, help_text='Device name if available', max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('connected_at', models.DateTimeField(auto_now_add=True)),
                ('disconnected_at', models.DateTimeField(blank=True, null=True)),
                ('is_connected', models.BooleanField(default=True)),
                ('network_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_ui.networksession')),
            ],
            options={
                'verbose_name': 'Connected Device',
                'verbose_name_plural': 'Connected Devices',
                'unique_together': {('network_session', 'mac_address')},
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.CharField(default='2024/2025', max_length=9)),
                ('semester', models.CharField(default='1st Semester', max_length=20)),
                ('enrolled_on', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_ui.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_ui.student')),
            ],
            options={
                'verbose_name': 'Course Enrollment',
                'verbose_name_plural': 'Course Enrollments',
                'unique_together': {('student', 'course', 'session', 'semester')},
            },
        ),
    ]
